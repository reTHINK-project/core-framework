
@startuml "deploy-protostub.png"

autonumber

!define SHOW_RuntimeA


!define SHOW_CoreRuntimeA
!define SHOW_MsgBUSAtRuntimeA
!define SHOW_RegistryAtRuntimeA
!define SHOW_CoreAgentAtRuntimeA

!define SHOW_SP1SandboxAtRuntimeA
!define SHOW_Protostub1AtRuntimeA
!define SHOW_ServiceProvider1RouterAtRuntimeA

!define SHOW_SP1

!include ../runtime_objects.plantuml

-> RunUA@A : loadStub( domain )

RunUA@A -> RunReg@A : discoverStub( domain )

alt Stub Not Available in Registry

	RunUA@A -> SP1 : get <sp-domain>/.well-known/protostub/

		note over BUS@A
			as defined in the data model the protocol stub is a well know URI.
			**open issue:** should it be the protostub URL a well known URI?
		end note

	RunUA@A -> SP1 : get protocolStubSourceCode

	create Proto1@A
	RunUA@A -> Proto1@A : new

	RunUA@A -> RunReg@A : registerStub(domainURL)

	opt protocol stub instance is registered in the remote back-end Registry
		...
	end

	RunUA@A <- RunReg@A : return RuntimeProtoStubURL

	RunReg@A -> BUS@A : addListener(\n registryListener,\n RuntimeProtoStubURL\status)

	RunUA@A -> Proto1@A : init(\nRuntimeProtoStubURL,\n BUS.postMessage,\nprotoStubConfigurationData)

	BUS@A <- RunUA@A : addListener( \nprotostubListener, \nRuntimeProtoStubURL)

	group protocol stub connection to domain: see Domain Registration in the Identity Management diagrams

	...

	end group

	Proto1@A -> BUS@A : postMessage( \nprotostubStatusUpdate message )


	note left
		eg protostub is connected or disconnected from the domain
	end note

	BUS@A -> RunReg@A : onEvent( \nprotostubStatusUpdate message )

end

@enduml
