
@startuml "deploy-hyperty.png"

autonumber

!define SHOW_RuntimeA

!define SHOW_AppAtRuntimeA

!define SHOW_CoreRuntimeA
!define SHOW_MsgBUSAtRuntimeA
!define SHOW_RegistryAtRuntimeA
!define SHOW_CoreAgentAtRuntimeA
!define SHOW_AuthAtRuntimeA

!define SHOW_SP1SandboxAtRuntimeA
!define SHOW_Protostub1AtRuntimeA
!define SHOW_ServiceProvider1HypertyAtRuntimeA
!define SHOW_ServiceProvider1SandboxManagerAtRuntimeA

!define SHOW_SP1
!define SHOW_Cat1

!include ../runtime_objects.plantuml


RunUA@A <- App@A : loadHyperty\n(HypertyDescriptorURL)

== get Hyperty descriptor ==

	RunUA@A -> Cat1 : get\nHypertyDescriptorURL

	RunUA@A <-- Cat1 : return HypertyDescriptor

== get Hyperty source code ==

	RunUA@A -> SP1 : get\nHypertySouceCodeURL

	RunUA@A <-- SP1 : return Hyperty.js

	== deploy Hyperty policies ==

RunUA@A -> RunAuth@A : addPolicies( hypertyURL, policies )

RunUA@A -> RunUA@A : HypertyDescriptor.policies?

alt deploy policy enforcer (see separated diagram)

...

end

== Decide in which Sandbox is the Hyperty deployed ==

RunUA@A -> RunAuth@A : sandboxing(HypertyDescriptorURL) ?

note right
	Ask Policy Engine about sandboxing Policy
end note

RunUA@A <-- RunAuth@A : sandboxing Policy returned

alt App and Hyperty executes in the same sandbox

RunUA@A -> RunReg@A : getAppSandbox()

RunUA@A <-- RunReg@A : return sandbox

else App and Hyperty are executed in different sandboxes

RunUA@A -> RunReg@A : getSandbox\n(HypertyDescriptorURL)

alt sandbox does not exist

== Instantiate Sandbox ==

	create Sand1@A
	RunUA@A -> Sand1@A : new( msgBus )

	RunUA@A <-- Sand1@A : return sandbox

end

end

== Register Hyperty ==

group register Hyperty (designed at register-hyperty.md)

RunUA@A -> RunReg@A : registerHyperty(\nsandbox,\nHypertyDescriptorURL )

...

RunUA@A <- RunReg@A : hypertyURL

end group

== Instantiate Hyperty inside the Sandbox ==

RunUA@A -> Sand1@A : deployComponent( hyperty.js, RuntimeHypertybURL,configuration )

create SP1H@A

Sand1@A -> SP1H@A : new

RunUA@A <-- Sand1@A : return component is deployed

BUS@A <- RunUA@A : addListener(\nhypertySandbox, \nhypertyURL)

RunUA@A --> App@A : return Hyperty is deployed

@enduml
