@startuml "user-identity-assertion.png"
autonumber

box "Alice Device Runtime"
        participant RuntimeUA as runtime
        participant "Msg BUS" as msgbus
end box
box "IdP Proxy Sandbox at Alice"
        participant "Identity Hyperty (IdP Proxy)" as idpproxy
end box
box "Service Provider Sandbox at Alice"
        participant "Service Provider Hyperty" as hyperty
end box
participant "Service Provider" as backend
participant "Identity service Provider" as idp

backend  -> hyperty     : Send(IdToken)
note right
        Bob's IdToken received through
        signaling of the Service Provider.
end note

hyperty  -> msgbus      : Verify(IdToken)
msgbus   -> runtime     : Verify(IdToken)
runtime  -> idp         : GetProxy(IdToken.proxy)
idp      -> runtime     : return(proxy)
create idpproxy
runtime  -> idpproxy    : <<create>>\n new IdPProxy(proxy)

note over idp
        May be two different server
        (repository and verify backend)
        but are shown here as the same
        participant.
end note

runtime  -> msgbus      : Verify(IdToken)
msgbus   -> idpproxy    : Verify(IdToken)
idpproxy -> idp         : Verify(IdToken)
activate idp
idp      -> idpproxy    : Verified(IdToken, validity)
deactivate idp
idpproxy -> msgbus      : Verified(IdToken, validity)
msgbus   -> runtime     : Verified(IdToken, validity)
note over runtime
        Received and validated IdToken
        could be stored for future reference.
        (e.g. last known assertion)
end note

runtime  -> msgbus      : Confirm(IdToken)
msgbus   -> hyperty     : Confirm(IdToken)

opt Refresh Trust
end

opt Negotiate Trust
end


@enduml
